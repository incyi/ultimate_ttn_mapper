# This is the name of the workflow, visible on GitHub UI.
name: test

# Here we tell GitHub to run the workflow when a commit
# is pushed or a Pull Request is opened.
on: [push, pull_request]

env:
  ARDUINO_BOARD_MANAGER_ADDITIONAL_URLS: "https://adafruit.github.io/arduino-board-index/package_adafruit_index.json"

# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  # This is the name of the job - can be whatever.
  test-matrix:

    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type arduino-platform, in this case a
        # total of 2.
        arduino-platform: ["adafruit:samd"]
        #, "arduino:avr"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following include section will be useless.
        include:
          # This works like this: when the platform is "arduino:samd", the
          # variable fqbn is set to "arduino:samd:nano_33_iot".
          #- arduino-platform: "arduino:samd"
          #  fqbn: "arduino:samd:nano_33_iot"
         # - arduino-platform: "arduino:avr"
          #  fqbn: "arduino:avr:uno"
          - arduino-platform: "adafruit:samd"
            fqbn: "adafruit:samd:adafruit_feather_m4"

    # This is the platform GitHub will use to run our workflow
    runs-on: ubuntu-latest

    # This is the list of steps this job will run.
    steps:
      # First of all, we clone the repo using the checkout action.
      - name: Checkout
        uses: actions/checkout@master

      # We use the arduino/setup-arduino-cli action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.arduino-platform }}

      # Get the required libraries
      - name: Install libraries
        run: |
          arduino-cli lib install "MCCI LoRaWAN LMIC library"
          arduino-cli lib install "Adafruit GFX library"
          arduino-cli lib install "Adafruit SSD1306"
          arduino-cli lib install "Adafruit NeoPixel"
          arduino-cli lib install "Adafruit GPS Library"
          arduino-cli lib install "Adafruit ZeroTimer Library"
#          arduino-cli lib install "Adafruit Arduino Zero ASF Core Library"
                    
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile --fqbn ${{ matrix.fqbn }} ./ultimate_ttn_mapper.ino
